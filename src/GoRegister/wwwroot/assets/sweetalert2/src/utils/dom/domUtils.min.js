/**
 * Minified by jsDelivr using Terser v3.14.1.
 * Original file: /npm/sweetalert2@9.6.0/src/utils/dom/domUtils.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import{getTimerProgressBar}from"./getters.js";import{swalClasses,iconTypes}from"../classes.js";import{toArray,objectValues,warn}from"../utils.js";export const states={previousBodyPadding:null};export const hasClass=(s,e)=>{if(!e)return!1;const t=e.split(/\s+/);for(let e=0;e<t.length;e++)if(!s.classList.contains(t[e]))return!1;return!0};const removeCustomClasses=(s,e)=>{toArray(s.classList).forEach(t=>{objectValues(swalClasses).includes(t)||objectValues(iconTypes).includes(t)||objectValues(e.showClass).includes(t)||s.classList.remove(t)})};export const applyCustomClass=(s,e,t)=>{if(removeCustomClasses(s,e),e.customClass&&e.customClass[t]){if("string"!=typeof e.customClass[t]&&!e.customClass[t].forEach)return warn(`Invalid type of customClass.${t}! Expected string or iterable object, got "${typeof e.customClass[t]}"`);addClass(s,e.customClass[t])}};export function getInput(s,e){if(!e)return null;switch(e){case"select":case"textarea":case"file":return getChildByClass(s,swalClasses[e]);case"checkbox":return s.querySelector(`.${swalClasses.checkbox} input`);case"radio":return s.querySelector(`.${swalClasses.radio} input:checked`)||s.querySelector(`.${swalClasses.radio} input:first-child`);case"range":return s.querySelector(`.${swalClasses.range} input`);default:return getChildByClass(s,swalClasses.input)}}export const focusInput=s=>{if(s.focus(),"file"!==s.type){const e=s.value;s.value="",s.value=e}};export const toggleClass=(s,e,t)=>{s&&e&&("string"==typeof e&&(e=e.split(/\s+/).filter(Boolean)),e.forEach(e=>{s.forEach?s.forEach(s=>{t?s.classList.add(e):s.classList.remove(e)}):t?s.classList.add(e):s.classList.remove(e)}))};export const addClass=(s,e)=>{toggleClass(s,e,!0)};export const removeClass=(s,e)=>{toggleClass(s,e,!1)};export const getChildByClass=(s,e)=>{for(let t=0;t<s.childNodes.length;t++)if(hasClass(s.childNodes[t],e))return s.childNodes[t]};export const applyNumericalStyle=(s,e,t)=>{t||0===parseInt(t)?s.style[e]="number"==typeof t?`${t}px`:t:s.style.removeProperty(e)};export const show=(s,e="flex")=>{s.style.opacity="",s.style.display=e};export const hide=s=>{s.style.opacity="",s.style.display="none"};export const toggle=(s,e,t)=>{e?show(s,t):hide(s)};export const isVisible=s=>!(!s||!(s.offsetWidth||s.offsetHeight||s.getClientRects().length));export const isScrollable=s=>!!(s.scrollHeight>s.clientHeight);export const hasCssAnimation=s=>{const e=window.getComputedStyle(s),t=parseFloat(e.getPropertyValue("animation-duration")||"0"),o=parseFloat(e.getPropertyValue("transition-duration")||"0");return t>0||o>0};export const contains=(s,e)=>{if("function"==typeof s.contains)return s.contains(e)};export const animateTimerProgressBar=(s,e=!1)=>{const t=getTimerProgressBar();isVisible(t)&&(e&&(t.style.transition="none",t.style.width="100%"),setTimeout(()=>{t.style.transition=`width ${s/1e3}s linear`,t.style.width="0%"},10))};export const stopTimerProgressBar=()=>{const s=getTimerProgressBar(),e=parseInt(window.getComputedStyle(s).width);s.style.removeProperty("transition"),s.style.width="100%";const t=parseInt(window.getComputedStyle(s).width),o=parseInt(e/t*100);s.style.removeProperty("transition"),s.style.width=`${o}%`};
//# sourceMappingURL=/sm/22a5b9f4a55869f61893ee813b4bedd261d32138350f2ea834840878691d6e88.map