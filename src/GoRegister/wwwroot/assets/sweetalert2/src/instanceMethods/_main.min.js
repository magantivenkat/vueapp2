/**
 * Minified by jsDelivr using Terser v3.14.1.
 * Original file: /npm/sweetalert2@9.6.0/src/instanceMethods/_main.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import defaultParams,{showWarningsForParams}from"../utils/params.js";import*as dom from"../utils/dom/index.js";import{swalClasses}from"../utils/classes.js";import Timer from"../utils/Timer.js";import{callIfFunction}from"../utils/utils.js";import setParameters from"../utils/setParameters.js";import globalState from"../globalState.js";import{openPopup}from"../utils/openPopup.js";import privateProps from"../privateProps.js";import privateMethods from"../privateMethods.js";import{handleInputOptionsAndValue}from"../utils/dom/inputUtils.js";import{handleConfirmButtonClick,handleCancelButtonClick}from"./buttons-handlers.js";import{addKeydownHandler,setFocus}from"./keydown-handler.js";import{handlePopupClick}from"./popup-click-handler.js";import{DismissReason}from"../utils/DismissReason.js";export function _main(e){showWarningsForParams(e),dom.getPopup()&&globalState.swalCloseEventFinishedCallback&&(globalState.swalCloseEventFinishedCallback(),delete globalState.swalCloseEventFinishedCallback),globalState.deferDisposalTimer&&(clearTimeout(globalState.deferDisposalTimer),delete globalState.deferDisposalTimer);const t=prepareParams(e);setParameters(t),Object.freeze(t),globalState.timeout&&(globalState.timeout.stop(),delete globalState.timeout),clearTimeout(globalState.restoreFocusTimeout);const o=populateDomCache(this);return dom.render(this,t),privateProps.innerParams.set(this,t),swalPromise(this,o,t)}const prepareParams=e=>{const t=Object.assign({},defaultParams.showClass,e.showClass),o=Object.assign({},defaultParams.hideClass,e.hideClass),s=Object.assign({},defaultParams,e);return s.showClass=t,s.hideClass=o,!1===e.animation&&(s.showClass={popup:"",backdrop:"swal2-backdrop-show swal2-noanimation"},s.hideClass={}),s},swalPromise=(e,t,o)=>new Promise(s=>{const a=t=>{e.closePopup({dismiss:t})};privateMethods.swalPromiseResolve.set(e,s),setupTimer(globalState,o,a),t.confirmButton.onclick=(()=>handleConfirmButtonClick(e,o)),t.cancelButton.onclick=(()=>handleCancelButtonClick(e,a)),t.closeButton.onclick=(()=>a(DismissReason.close)),handlePopupClick(e,t,a),addKeydownHandler(e,globalState,o,a),o.toast&&(o.input||o.footer||o.showCloseButton)?dom.addClass(document.body,swalClasses["toast-column"]):dom.removeClass(document.body,swalClasses["toast-column"]),handleInputOptionsAndValue(e,o),openPopup(o),initFocus(t,o),t.container.scrollTop=0}),populateDomCache=e=>{const t={popup:dom.getPopup(),container:dom.getContainer(),content:dom.getContent(),actions:dom.getActions(),confirmButton:dom.getConfirmButton(),cancelButton:dom.getCancelButton(),closeButton:dom.getCloseButton(),validationMessage:dom.getValidationMessage(),progressSteps:dom.getProgressSteps()};return privateProps.domCache.set(e,t),t},setupTimer=(e,t,o)=>{const s=dom.getTimerProgressBar();dom.hide(s),t.timer&&(e.timeout=new Timer(()=>{o("timer"),delete e.timeout},t.timer),t.timerProgressBar&&(dom.show(s),setTimeout(()=>{dom.animateTimerProgressBar(t.timer)})))},initFocus=(e,t)=>{if(!t.toast)return callIfFunction(t.allowEnterKey)?t.focusCancel&&dom.isVisible(e.cancelButton)?e.cancelButton.focus():t.focusConfirm&&dom.isVisible(e.confirmButton)?e.confirmButton.focus():void setFocus(t,-1,1):blurActiveElement()},blurActiveElement=()=>{document.activeElement&&"function"==typeof document.activeElement.blur&&document.activeElement.blur()};
//# sourceMappingURL=/sm/c7ebc83ac0e79e07b3aa955c52e88595ceb89ef6052829e558416f328726a820.map